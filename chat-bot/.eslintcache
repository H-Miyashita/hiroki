[{"/Users/miyashitahiroshinozomi/chat-bot/src/index.js":"1","/Users/miyashitahiroshinozomi/chat-bot/src/reportWebVitals.js":"2","/Users/miyashitahiroshinozomi/chat-bot/src/App.jsx":"3","/Users/miyashitahiroshinozomi/chat-bot/src/components/index.js":"4","/Users/miyashitahiroshinozomi/chat-bot/src/components/AnswersList.jsx":"5","/Users/miyashitahiroshinozomi/chat-bot/src/components/Answer.jsx":"6","/Users/miyashitahiroshinozomi/chat-bot/src/components/Chats.jsx":"7","/Users/miyashitahiroshinozomi/chat-bot/src/components/Chat.jsx":"8","/Users/miyashitahiroshinozomi/chat-bot/src/components/Forms/FormsDialog.jsx":"9","/Users/miyashitahiroshinozomi/chat-bot/src/components/Forms/TextInput.jsx":"10","/Users/miyashitahiroshinozomi/chat-bot/src/firebase/index.js":"11","/Users/miyashitahiroshinozomi/chat-bot/src/firebase/config.js":"12"},{"size":513,"mtime":1609817244592,"results":"13","hashOfConfig":"14"},{"size":361,"mtime":1609817272923,"results":"15","hashOfConfig":"14"},{"size":2927,"mtime":1610982331056,"results":"16","hashOfConfig":"14"},{"size":177,"mtime":1609915405956,"results":"17","hashOfConfig":"14"},{"size":388,"mtime":1610184225486,"results":"18","hashOfConfig":"14"},{"size":634,"mtime":1610186430115,"results":"19","hashOfConfig":"14"},{"size":677,"mtime":1611094356089,"results":"20","hashOfConfig":"14"},{"size":780,"mtime":1611050470433,"results":"21","hashOfConfig":"14"},{"size":4337,"mtime":1610984023429,"results":"22","hashOfConfig":"14"},{"size":546,"mtime":1610201440052,"results":"23","hashOfConfig":"14"},{"size":185,"mtime":1610210304319,"results":"24","hashOfConfig":"14"},{"size":375,"mtime":1610207493921,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1s0wvhw",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/miyashitahiroshinozomi/chat-bot/src/index.js",[],["55","56"],"/Users/miyashitahiroshinozomi/chat-bot/src/reportWebVitals.js",[],"/Users/miyashitahiroshinozomi/chat-bot/src/App.jsx",["57"],"import React,{useState,useEffect,useCallback} from 'react';\nimport './assets/styles/style.css';\nimport {AnswersList,Chats} from './components/index';\nimport FormsDialog from './components/Forms/FormsDialog';\nimport {db} from './firebase/index';\n\n\nconst App = () => {\n  const [answers,setAnswers] = useState([]);\n  const [chats,setChats] = useState([]);\n  const [currentId,setCurrentId] = useState(\"init\");\n  const [dataset,setDataset] = useState({});\n  const [open,setOpen] = useState(false);\n\n  const displayNextQuestion = (nextQuestionId,nextDataset) => {\n    addChats({\n      text:nextDataset.question,\n      type:'question'\n    })\n      setAnswers(nextDataset.answers)\n      setCurrentId(nextQuestionId)\n  }\n\n  const selectAnswer = (selectedAnswer,nextQuestionId) => {\n    console.log(nextQuestionId)\n    switch (true) {\n      case (/^https:*/.test(nextQuestionId)):\n        const a = document.createElement('a');\n        a.href = nextQuestionId;\n        a.target = '_blank';\n        a.click();\n        break;\n\n        case (/^http:*/.test(nextQuestionId)):\n        const b = document.createElement('a');\n        b.href = nextQuestionId;\n        b.target = '_blank';\n        b.click();\n        break;\n      \n      case(nextQuestionId === 'contact'):\n        handleClickOpen();\n      break;\n\n      default:\n        addChats({\n          text:selectedAnswer,\n          type:'answer'\n        })\n        setTimeout(() => \n          displayNextQuestion(nextQuestionId,dataset[nextQuestionId])\n          ,500\n      ) \n        break;\n    }\n  }\n\n  const addChats = (chat) => {\n    setChats(prevChats => {\n      return [...prevChats,chat]\n    })\n  }\n  const handleClickOpen = () => {\n      setOpen(true)\n  };\n\n  const handleClose = useCallback(() => {\n      setOpen(false)\n  },[setOpen])\n\n// ユーザーからの質問事項\n  // initAnswer = () => {\n  //   const initDataset = this.state.dataset[this.state.currentId];\n  //   const initAnswers = initDataset.answers;\n  //   console.log(initAnswers)\n\n  //   this.setState({\n  //     answers: initAnswers\n  //   })\n  // }\n// 質問内容の返信（クライアント）\n  useEffect(() => {\n    (async() => {\n      const initDataset = {};\n\n      await db.collection('questions').get().then(snapshots =>{\n        snapshots.forEach(doc => {\n          const id = doc.id\n          const data = doc.data()\n          initDataset[id] = data\n        })\n      })\n      setDataset(initDataset)\n      displayNextQuestion(currentId,initDataset[currentId])\n\n    })()\n  },[])\n  useEffect(() => {\n    const scroll = document.getElementById(\"scroll_area\");\n    if(scroll){\n      scroll.scrollTop = scroll.scrollHeight;\n    }\n  })\n  \n\n\n    return (\n          <div className=\"c-box\">\n            <Chats chats={chats}/>\n            <AnswersList answers= {answers} select={selectAnswer}/>\n            <FormsDialog open={open} handleClose={handleClose}/>\n          </div>\n    );\n  }\n\n\nexport default App\n","/Users/miyashitahiroshinozomi/chat-bot/src/components/index.js",[],"/Users/miyashitahiroshinozomi/chat-bot/src/components/AnswersList.jsx",[],"/Users/miyashitahiroshinozomi/chat-bot/src/components/Answer.jsx",[],"/Users/miyashitahiroshinozomi/chat-bot/src/components/Chats.jsx",[],"/Users/miyashitahiroshinozomi/chat-bot/src/components/Chat.jsx",[],"/Users/miyashitahiroshinozomi/chat-bot/src/components/Forms/FormsDialog.jsx",["58","59","60"],"import React,{useState,useEffect,useCallback} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextInput from './TextInput';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useEventCallback } from '@material-ui/core';\n\n\nconst FormsDialog　= (props) =>　{\n    const [name,setName] = useState(\"\");\n    const [email,setEmail] = useState(\"\");\n    const [discription,setDiscription] = useState(\"\");\n\n    const inputName = useCallback((event) => {\n        setName(event.target.value)\n    },[setName])\n    const inputEmail = useCallback((event) => {\n        setEmail(event.target.value)\n    },[setEmail])\n    const inputDiscription = useCallback((event) => {\n        setDiscription(event.target.value)\n    },[setDiscription])\n\n    const validateEmailFormat = (email) => {\n        const regex = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n        return regex.test(email)\n    }\n\n    const validateRequiredInput = (...args) => {\n        let isBlank = false;\n        for (let i = 0; i < args.length; i=(i+1)|0) {\n            if (args[i] === \"\") {\n                isBlank = true;\n            }\n        }\n        return isBlank\n    };\n\n    \n    const submitForm = () => {\n        const isBlank = validateRequiredInput(name, email, discription)\n        const isValidEmail = validateEmailFormat(email)\n        \n\n        if (isBlank) {\n            alert('必須入力欄が空白です。')\n            return false\n        } else if (!isValidEmail) {\n            alert('メールアドレスの書式が異なります。')\n            return false\n        }else {\n        const payload = {\n            text:'お問い合わせがありました\\n' +\n                'お名前:\\n' + name + '\\n' +\n                'Email:' + email + '\\n' +\n                'お問い合わせ内容:\\n' + discription \n        }\n    \n        const url = 'https://hooks.slack.com/services/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'\n\n        fetch(url,{\n            method:'POST',\n            body:JSON.stringify(payload)\n        }).then(() => {\n            alert('送信が完了しました');\n            setDiscription(\"\")\n            setEmail(\"\")\n            setName(\"\")\n            return props.handleClose()\n        })\n    }\n}\n            return(\n                <Dialog\n                    open={props.open}\n                    onClose={props.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">お問い合わせフォーム</DialogTitle>\n                    <DialogContent>\n                        <TextInput \n                            label={\"氏名（必須）\"} \n                            multiline={false}\n                            rows={1}\n                            value={name}\n                            type={\"text\"}\n                            onChange={inputName}\n                        />\n                        <TextInput \n                            label={\"mailアドレス\"} \n                            multiline={false}\n                            rows={1}\n                            value={email}\n                            type={\"email\"}\n                            onChange={inputEmail}\n                        />\n                        <TextInput \n                            label={\"本文\"} \n                            multiline={false}\n                            rows={1}\n                            value={discription}\n                            type={\"text\"}\n                            onChange={inputDiscription}\n                        />\n                        \n                    </DialogContent>\n                    <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        キャンセル\n                    </Button>\n                    <Button onClick={submitForm} color=\"primary\" autoFocus>\n                        送信\n                    </Button>\n                    </DialogActions>\n            </Dialog>\n        )\n}\nexport default FormsDialog　","/Users/miyashitahiroshinozomi/chat-bot/src/components/Forms/TextInput.jsx",["61"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\n\n\nconst TextInput = (props) => {\n    return(\n            <TextField \n                fullWidth={true}\n                label={props.label} \n                margin={\"dense\"}\n                multiline={props.multiline}\n                rows={props.rows}\n                value={props.value}\n                type={props.type}\n                onChange={props.onChange}\n            />\n    )\n}\n\nexport default TextInput",["62","63"],"/Users/miyashitahiroshinozomi/chat-bot/src/firebase/index.js",[],"/Users/miyashitahiroshinozomi/chat-bot/src/firebase/config.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":97,"column":5,"nodeType":"70","endLine":97,"endColumn":7,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":24,"nodeType":"74","messageId":"75","endLine":1,"endColumn":33},{"ruleId":"72","severity":1,"message":"76","line":8,"column":10,"nodeType":"74","messageId":"75","endLine":8,"endColumn":26},{"ruleId":"77","severity":1,"message":"78","line":27,"column":44,"nodeType":"79","messageId":"80","endLine":27,"endColumn":45,"suggestions":"81"},{"ruleId":"72","severity":1,"message":"82","line":2,"column":10,"nodeType":"74","messageId":"75","endLine":2,"endColumn":20},{"ruleId":"64","replacedBy":"83"},{"ruleId":"66","replacedBy":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentId' and 'displayNextQuestion'. Either include them or remove the dependency array.","ArrayExpression",["87"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useEventCallback' is defined but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["88","89"],"'makeStyles' is defined but never used.",["85"],["86"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},{"messageId":"92","fix":"93","desc":"94"},{"messageId":"95","fix":"96","desc":"97"},"Update the dependencies array to be: [currentId, displayNextQuestion]",{"range":"98","text":"99"},"removeEscape",{"range":"100","text":"101"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"102","text":"103"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[2450,2452],"[currentId, displayNextQuestion]",[1012,1013],"",[1012,1012],"\\"]